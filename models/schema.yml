version: 2

models:
  - name: dim_listing_cleansed
    description: Table with cleansed Airbnb listings.
    columns:

      - name: listing_id
        description: Unique ID to Identify listings
        data_tests:
          - unique
          - not_null

      - name: host_id
        description: ID for each host of any listings.
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_hosts_cleansed')
              field: host_id

      - name: room_type
        description: type of room for rental.
        data_tests:
          - accepted_values:
              values: ['Entire home/apt',
                      'Private room',
                      'Shared room',
                      'Hotel room']
  
      - name: minimum_nights
        description: '{{ doc("listing_min_nights") }}'
        data_tests:
          - positive_values
      
      - name: listing_url
        data_tests:
          - unique
  
  - name: dim_hosts_cleansed
    description: '{{ doc("hosts_list_cleansed") }}'
    columns:
      - name: host_id
        description: Unique ID for each hosts.
        tests:
          - not_null
          - unique
      
      - name: host_name
        description: Name for identifiying hosts.
        tests:
          - not_null
      
      - name: is_superhost
        description: Column to identify top rated hosts.

      - name: created_at
        description: To identify creation time.

      - name: updated_at
        description: To identify updated time.

  - name: dim_listing_w_hosts
    columns:
      - name: price
        data_tests:
        - dbt_expectations.expect_column_values_to_be_of_type:
            column_type: number
        - dbt_expectations.expect_column_quantile_values_to_be_between:
            quantile: .99
            min_value: 50
            max_value: 500
        - dbt_expectations.expect_column_max_to_be_between:
            max_value: 5000
            config:
              severity: warn

    data_tests:
      - dbt_expectations.expect_table_row_count_to_equal_other_table:
          compare_model: ref("dim_listing_cleansed")